syntax = "proto3";
package S2C;

/** remember to put your message here as a kind support**/
message Message {
    oneof kind {
        SC_TEST_ECHO SC_TEST_ECHO = 1;

        LOGIN_SC_LOGIN LOGIN_SC_LOGIN = 9001;
        LOGIN_SC_CHOOSE_SERVER LOGIN_SC_CHOOSE_SERVER = 9002;
        LOGIN_SC_GET_SERVER_LIST LOGIN_SC_GET_SERVER_LIST = 9003;
        LOGIN_SC_GET_INFO LOGIN_SC_GET_INFO = 9004;

        SC_ROLE_ONLINE SC_ROLE_ONLINE = 1001;
        SC_ROLE_HEART_BEAT SC_ROLE_HEART_BEAT = 1002;
        SC_ROLE_PRO_UPDATE SC_ROLE_PRO_UPDATE = 1003;
        SC_GET_REWARD SC_GET_REWARD = 1004;

        SC_INIT_HERO SC_INIT_HERO = 1101;
        SC_UPDATE_HERO SC_UPDATE_HERO = 1102;

        SC_INIT_EQUIP SC_INIT_EQUIP = 1201;
        SC_UPDATE_EQUIP SC_UPDATE_EQUIP = 1202;

        SC_INIT_ITEM SC_INIT_ITEM = 1301;
        SC_UPDATE_ITEM SC_UPDATE_ITEM = 1302;
    }
}

message Reward {
    uint64 gold = 1;
    uint32 diamond = 2;
    uint64 exp = 3;
    uint32 vipExp = 4;
    repeated uint32 heroes = 5;
    repeated uint32 equips = 6;
    map<uint32, uint32> items = 7;
}

message SC_GET_REWARD {
    Reward reward = 1;
}

message Hero {
    uint32 uid = 1;
    uint32 id = 2;
    uint32 combat = 3;
    uint32 lvl = 4;
}

message SC_INIT_HERO {
    map<uint32, Hero> heroes = 1;
}

message SC_UPDATE_HERO {
    map<int32, Hero> heroes = 1;
}

message Equip {
    uint32 uid = 1;
    uint32 id = 2;
    uint32 lvl = 3;
    uint32 rank = 4;
    uint32 star = 5;
}

message SC_INIT_EQUIP {
    map<uint32, Equip> equips = 1;
}

message SC_UPDATE_EQUIP {
    map<int32, Equip> equips = 1;
}

message Item {
    uint32 id = 1;
    uint32 cnt = 2;
}

message SC_INIT_ITEM {
    map<uint32, Item> items = 1;
}

message SC_UPDATE_ITEM {
    map<int32, Item> items = 1;
}

message SC_ROLE_PRO_UPDATE {
    uint32 uid = 1;
    string nickname = 2;
    string headimgurl = 3;
    uint32 diamond = 4;
    uint64 gold = 5;
    uint32 level = 6;
    uint32 vip_level = 7;
    uint64 exp = 8;
    uint32 vipExp = 9;
}

message SC_TEST_ECHO {
    int32 cmd_id = 1;
    string msg = 2;
}

message Error {
    int32 code = 1;
    string msg = 2;
}


message SC_ROLE_ONLINE {
    int32 role_id = 1;
}

message SC_ROLE_HEART_BEAT {
    string msg = 1;
}

message LOGIN_SC_LOGIN {
    uint32 server_id = 1;
    uint32 gm_auth = 2;
}

message LOGIN_SC_CHOOSE_SERVER {
    string ip = 1;
    uint32 port = 2;
    string version = 3;
    string res_version = 4;
    string res_server_address = 5;
}

message LOGIN_SC_GET_SERVER_LIST {
    message Server {
        uint32 server_id = 1;
        string name = 2;
        uint32 status = 3;
    }

    repeated Server servers = 1;
}

message LOGIN_SC_GET_INFO {
    string notice = 1;
    string version = 2;
    string update_address = 3;
}